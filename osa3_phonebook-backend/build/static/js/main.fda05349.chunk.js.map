{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","database","getList","axios","get","create","newObject","post","remove","id","delete","update","changedObject","put","NimiTaulukko","persons","searchName","handlePoista","map","person","name","lista","filter","toLowerCase","includes","Nimi","number","onClick","Filtteri","arvo","kasittelija","value","onChange","LisaysLomake","nimi","numero","nimikasittelija","numerokasittelija","lisaaja","onSubmit","type","Ilmoitus","msg","color","className","text","App","useState","setPersons","newName","setNewName","setSearchName","newNumber","setNewNumber","message","setMessage","useEffect","then","response","data","shortMessage","setTimeout","event","console","log","target","preventDefault","nimiObject","some","window","confirm","found","find","catch","error","concat","tulos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fda05349.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n// const baseUrl = 'http://localhost:3001/persons'\n\nconst getList = () => {\n    return axios.get(baseUrl)\n}\n\nconst create = (newObject) => {\n    return axios.post(baseUrl, newObject)\n}\n\nconst update = (changedObject) => {\n    return axios.put(`${baseUrl}/${changedObject.id}`, changedObject)\n}\n\nconst remove = (id) => {\n    return axios.delete(`${baseUrl}/${id}`)\n}\n\nconst database = {\n    getList: getList,\n    create: create,\n    remove: remove,\n    update: update\n}\n\nexport default database","import React, { useState, useEffect } from 'react'\nimport database from './services/persons'\nimport './index.css'\n\nconst NimiTaulukko = ({persons, searchName, handlePoista}) => {\n    if (searchName === '') {\n        return (\n            <div>\n                <ul>{persons.map(person => <Nimi key={person.name} person={person} handlePoista={handlePoista}/>)}</ul>\n            </div>\n        )\n    } else {\n        const lista = persons.filter(person => person.name.toLowerCase().includes(searchName.toLowerCase()))\n        return (\n            <div>\n                <ul>{lista.map(person => <Nimi key={person.name} person={person} handlePoista={handlePoista}/>)}</ul>\n            </div>\n        )\n    }\n\n}\n\nconst Nimi = ({person, handlePoista}) => {\n    return (\n        <>\n        <li>{person.name} {person.number} <button onClick={() => handlePoista(person)}>poista</button></li>\n        </>\n    )\n}\n\nconst Filtteri = ({arvo, kasittelija}) => {\n    return (\n        <form>\n            <div>\n            hae nimellä <input value={arvo} onChange={kasittelija} />\n            </div>\n        </form>\n    )\n}\n\nconst LisaysLomake = ({nimi, numero, nimikasittelija, numerokasittelija, lisaaja}) => {\n    return (\n        <form onSubmit={lisaaja}>\n            <div>\n            name: <input value={nimi} onChange={nimikasittelija} />\n            </div>\n            <div>\n            number: <input value={numero} onChange={numerokasittelija} />\n            </div>\n            <div>\n            <button type=\"submit\">add</button>\n            </div>\n        </form>\n    )\n}\n\nconst Ilmoitus = ({msg}) => {\n    if (msg === null) return null\n\n    if (msg.color === 'green') {\n        return (\n            <div className=\"viestiGreen\">{msg.text}</div>\n        )\n    } else {\n        return (\n            <div className=\"viestiRed\">{msg.text}</div>\n        )\n    }\n}\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ searchName, setSearchName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ message, setMessage ] = useState(null)\n\n  const hook = () => {\n    database\n      .getList()\n      .then(response => {\n        setPersons(response.data)\n      })\n  }\n  \n  useEffect(hook, [])\n\n  const shortMessage = (msg) => {\n      setMessage(msg)\n      setTimeout(() => {setMessage(null)}, 3000)\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n\n    const nimiObject = {name: newName, number: newNumber}\n    setNewName('')\n    setNewNumber('')\n    if (!(persons.some(person => person.name === nimiObject.name))) {\n        database\n            .create(nimiObject)\n            .then(response => {\n                setPersons(persons.concat(response.data))\n                shortMessage({ text: 'Lisäys onnistui', color: 'green' })\n            })\n            .catch(error => {\n                shortMessage({ text: error.response.data.error, color: 'red' })\n            })\n\n    } else if (persons.some(person => person.name === nimiObject.name && person.number !== nimiObject.number)) {\n        if (window.confirm('Päivitetäänkö numero henkilölle ' + nimiObject.name + '?')) {\n\n            const found = persons.find(person => person.name === nimiObject.name)\n            const changedObject = {...found, number: nimiObject.number}\n            database\n                .update(changedObject)\n                .then(response => {\n                    if (response.data.name) {\n                        setPersons(persons.map(person => person.name !== nimiObject.name ? person : response.data))\n                        shortMessage({ text: 'Päivitys onnistui', color: 'green' })\n                    } else {\n                        setPersons(persons.filter(person => person.id !== found.id))\n                        shortMessage({ text: `${nimiObject.name} tietoja ei enää ole olemassa`, color: 'red' })\n                    }\n                })\n                .catch(error => {\n                    shortMessage({ text: error.response.data.error, color: 'red' })\n                })\n        }\n    \n    } else {\n        shortMessage( { text: `${nimiObject.name} on jo listalla`, color: 'red' } )\n    }\n    \n  }\n\n  const poista = (person) => {\n    if (window.confirm('Haluatko varmasti poistaa ' + person.name + ' listalta?') === true) {\n        database\n            .remove(person.id)\n            .then(response => {setPersons(persons.filter(tulos => tulos.id !== person.id))})\n            shortMessage( { text: `${person.name} poistettu`, color: 'green' } )\n    }\n    \n  }\n\n  const handleNameChange = (event) => {\n      setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleSearchChange = (event) => {\n    console.log(event.target.value)\n    setSearchName(event.target.value)\n  }\n\n\n  return (\n    <div>\n\n        <h2>Puhelinluettelo</h2>\n        <Filtteri arvo={searchName} kasittelija={handleSearchChange}/>\n\n        <h3>Lisää uusi</h3>\n\n        <Ilmoitus msg={message} />\n\n        <LisaysLomake\n        nimi={newName}\n        numero={newNumber}\n        nimikasittelija={handleNameChange}\n        numerokasittelija={handleNumberChange}\n        lisaaja={addPerson} />\n\n        <h3>Numbers</h3>\n        <NimiTaulukko persons={persons} searchName={searchName} handlePoista={poista}/>\n\n        </div>\n  )\n\n}\n\nexport default App","import ReactDOM from 'react-dom';\nimport React from 'react'\nimport App from './App'\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}